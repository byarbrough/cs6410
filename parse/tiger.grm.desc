1 reduce/reduce conflict
73 shift/reduce conflicts

error:  state 20: reduce/reduce conflict between rule 66 and rule 63 on LBRACK
error:  state 59: shift/reduce conflict (shift OR, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift AND, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift GE, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift GT, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift LE, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift LT, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift NEQ, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift EQ, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift DIVIDE, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift TIMES, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift MINUS, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift PLUS, reduce by rule 3)
error:  state 83: shift/reduce conflict (shift OR, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift AND, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift GE, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift GT, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift LE, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift LT, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift NEQ, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift EQ, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift DIVIDE, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift TIMES, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift MINUS, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift PLUS, reduce by rule 33)
error:  state 84: shift/reduce conflict (shift ELSE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift OR, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift AND, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift GE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift GT, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift LE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift LT, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift NEQ, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift EQ, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift DIVIDE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift TIMES, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift MINUS, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift PLUS, reduce by rule 32)
error:  state 106: shift/reduce conflict (shift OR, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift AND, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift GE, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift GT, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift LE, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift LT, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift NEQ, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift EQ, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift DIVIDE, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift TIMES, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift MINUS, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift PLUS, reduce by rule 35)
error:  state 113: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift PLUS, reduce by rule 31)
error:  state 129: shift/reduce conflict (shift OR, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift AND, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift GE, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift GT, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift LE, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift LT, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift NEQ, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift EQ, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift DIVIDE, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift TIMES, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift MINUS, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift PLUS, reduce by rule 34)

state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 10
	program	goto 138
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 1:

	exp : record .  (reduce by rule 11)



	.	reduce by rule 11


state 2:

	exp : assignment .  (reduce by rule 10)



	.	reduce by rule 10


state 3:

	exp : funcall .  (reduce by rule 9)



	.	reduce by rule 9


state 4:

	exp : literal .  (reduce by rule 1)



	.	reduce by rule 1


state 5:

	exp : lets .  (reduce by rule 7)



	.	reduce by rule 7


state 6:

	exp : array .  (reduce by rule 5)



	.	reduce by rule 5


state 7:

	exp : cond .  (reduce by rule 6)



	.	reduce by rule 6


state 8:

	array : typeid . LBRACK exp RBRACK OF exp 
	record : typeid . LBRACE ID EQ exp recarg RBRACE 

	LBRACK	shift 22
	LBRACE	shift 21


	.	error


state 9:

	exp : lvalue .  (reduce by rule 8)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 25
	DOT	shift 24
	ASSIGN	shift 23


	.	reduce by rule 8


state 10:

	exp : exp . op exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 0


state 11:

	literal : NIL .  (reduce by rule 12)



	.	reduce by rule 12


state 12:

	lets : LET . decs IN seqexp END 

	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	decs	goto 43
	dec	goto 42
	tydec	goto 41
	vardec	goto 40
	fundec	goto 39

	.	reduce by rule 47


state 13:

	cond : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 47


	.	error


state 14:

	cond : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 48
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 15:

	cond : IF . exp THEN exp ELSE exp 
	cond : IF . exp THEN exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 49
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 16:

	exp : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 50
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 17:

	exp : LPAREN . seqexp RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 52
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	seqexp	goto 51
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	reduce by rule 15


state 18:

	literal : STRING .  (reduce by rule 14)



	.	reduce by rule 14


state 19:

	literal : INT .  (reduce by rule 13)



	.	reduce by rule 13

error:  state 20: reduce/reduce conflict between rule 66 and rule 63 on LBRACK

state 20:

	lvalue : ID .  (reduce by rule 63)
	typeid : ID .  (reduce by rule 66)
	funcall : ID . LPAREN argseq RPAREN 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	LPAREN	shift 53
	RPAREN	reduce by rule 63
	LBRACK	reduce by rule 63
	RBRACK	reduce by rule 63
	LBRACE	reduce by rule 66
	RBRACE	reduce by rule 63
	DOT	reduce by rule 63
	PLUS	reduce by rule 63
	MINUS	reduce by rule 63
	TIMES	reduce by rule 63
	DIVIDE	reduce by rule 63
	EQ	reduce by rule 63
	NEQ	reduce by rule 63
	LT	reduce by rule 63
	LE	reduce by rule 63
	GT	reduce by rule 63
	GE	reduce by rule 63
	AND	reduce by rule 63
	OR	reduce by rule 63
	ASSIGN	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 21:

	record : typeid LBRACE . ID EQ exp recarg RBRACE 

	ID	shift 54


	.	error


state 22:

	array : typeid LBRACK . exp RBRACK OF exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 55
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 23:

	assignment : lvalue ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 56
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 24:

	lvalue : lvalue DOT . ID 

	ID	shift 57


	.	error


state 25:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 58
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 26:

	exp : exp op . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 59
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 27:

	op : OR .  (reduce by rule 20)



	.	reduce by rule 20


state 28:

	op : AND .  (reduce by rule 19)



	.	reduce by rule 19


state 29:

	op : GE .  (reduce by rule 21)



	.	reduce by rule 21


state 30:

	op : GT .  (reduce by rule 22)



	.	reduce by rule 22


state 31:

	op : LE .  (reduce by rule 23)



	.	reduce by rule 23


state 32:

	op : LT .  (reduce by rule 24)



	.	reduce by rule 24


state 33:

	op : NEQ .  (reduce by rule 25)



	.	reduce by rule 25


state 34:

	op : EQ .  (reduce by rule 26)



	.	reduce by rule 26


state 35:

	op : DIVIDE .  (reduce by rule 30)



	.	reduce by rule 30


state 36:

	op : TIMES .  (reduce by rule 29)



	.	reduce by rule 29


state 37:

	op : MINUS .  (reduce by rule 28)



	.	reduce by rule 28


state 38:

	op : PLUS .  (reduce by rule 27)



	.	reduce by rule 27


state 39:

	dec : fundec .  (reduce by rule 50)



	.	reduce by rule 50


state 40:

	dec : vardec .  (reduce by rule 49)



	.	reduce by rule 49


state 41:

	dec : tydec .  (reduce by rule 48)



	.	reduce by rule 48


state 42:

	decs : dec . decs 

	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	decs	goto 60
	dec	goto 42
	tydec	goto 41
	vardec	goto 40
	fundec	goto 39

	.	reduce by rule 47


state 43:

	lets : LET decs . IN seqexp END 

	IN	shift 61


	.	error


state 44:

	tydec : TYPE . typeid EQ ty 

	ID	shift 63

	typeid	goto 62

	.	error


state 45:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON typeid ASSIGN exp 

	ID	shift 64


	.	error


state 46:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON typeid EQ exp 

	ID	shift 65


	.	error


state 47:

	cond : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 66


	.	error


state 48:

	exp : exp . op exp 
	cond : WHILE exp . DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 67

	op	goto 26

	.	error


state 49:

	exp : exp . op exp 
	cond : IF exp . THEN exp ELSE exp 
	cond : IF exp . THEN exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 68

	op	goto 26

	.	error


state 50:

	exp : exp . op exp 
	exp : MINUS exp .  (reduce by rule 4)


	op	goto 26

	.	reduce by rule 4


state 51:

	exp : LPAREN seqexp . RPAREN 

	RPAREN	shift 69


	.	error


state 52:

	exp : exp . op exp 
	seqexp : exp . seqexpcont 

	SEMICOLON	shift 71
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26
	seqexpcont	goto 70

	.	reduce by rule 17


state 53:

	funcall : ID LPAREN . argseq RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 73
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	argseq	goto 72
	assignment	goto 2
	record	goto 1

	.	reduce by rule 38


state 54:

	record : typeid LBRACE ID . EQ exp recarg RBRACE 

	EQ	shift 74


	.	error


state 55:

	exp : exp . op exp 
	array : typeid LBRACK exp . RBRACK OF exp 

	RBRACK	shift 75
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	error


state 56:

	exp : exp . op exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 42)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 42


state 57:

	lvalue : lvalue DOT ID .  (reduce by rule 64)



	.	reduce by rule 64


state 58:

	exp : exp . op exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 76
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	error

error:  state 59: shift/reduce conflict (shift OR, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift AND, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift GE, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift GT, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift LE, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift LT, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift NEQ, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift EQ, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift DIVIDE, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift TIMES, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift MINUS, reduce by rule 3)
error:  state 59: shift/reduce conflict (shift PLUS, reduce by rule 3)

state 59:

	exp : exp . op exp 
	exp : exp op exp .  (reduce by rule 3)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 3


state 60:

	decs : dec decs .  (reduce by rule 46)



	.	reduce by rule 46


state 61:

	lets : LET decs IN . seqexp END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 52
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	seqexp	goto 77
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	reduce by rule 15


state 62:

	tydec : TYPE typeid . EQ ty 

	EQ	shift 78


	.	error


state 63:

	typeid : ID .  (reduce by rule 66)



	.	reduce by rule 66


state 64:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON typeid ASSIGN exp 

	COLON	shift 80
	ASSIGN	shift 79


	.	error


state 65:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON typeid EQ exp 

	LPAREN	shift 81


	.	error


state 66:

	cond : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 82
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 67:

	cond : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 83
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 68:

	cond : IF exp THEN . exp ELSE exp 
	cond : IF exp THEN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 84
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 69:

	exp : LPAREN seqexp RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 70:

	seqexp : exp seqexpcont .  (reduce by rule 16)



	.	reduce by rule 16


state 71:

	seqexpcont : SEMICOLON . exp seqexpcont 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 85
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 72:

	funcall : ID LPAREN argseq . RPAREN 

	RPAREN	shift 86


	.	error


state 73:

	exp : exp . op exp 
	argseq : exp . argseqcont 

	COMMA	shift 88
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26
	argseqcont	goto 87

	.	reduce by rule 40


state 74:

	record : typeid LBRACE ID EQ . exp recarg RBRACE 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 89
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 75:

	array : typeid LBRACK exp RBRACK . OF exp 

	OF	shift 90


	.	error


state 76:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 65)



	.	reduce by rule 65


state 77:

	lets : LET decs IN seqexp . END 

	END	shift 91


	.	error


state 78:

	tydec : TYPE typeid EQ . ty 

	ID	shift 63
	LBRACE	shift 95
	ARRAY	shift 94

	ty	goto 93
	typeid	goto 92

	.	error


state 79:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 96
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 80:

	vardec : VAR ID COLON . typeid ASSIGN exp 

	ID	shift 63

	typeid	goto 97

	.	error


state 81:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON typeid EQ exp 

	ID	shift 99

	tyfields	goto 98

	.	reduce by rule 55


state 82:

	exp : exp . op exp 
	cond : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 100

	op	goto 26

	.	error

error:  state 83: shift/reduce conflict (shift OR, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift AND, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift GE, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift GT, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift LE, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift LT, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift NEQ, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift EQ, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift DIVIDE, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift TIMES, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift MINUS, reduce by rule 33)
error:  state 83: shift/reduce conflict (shift PLUS, reduce by rule 33)

state 83:

	exp : exp . op exp 
	cond : WHILE exp DO exp .  (reduce by rule 33)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 33

error:  state 84: shift/reduce conflict (shift ELSE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift OR, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift AND, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift GE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift GT, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift LE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift LT, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift NEQ, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift EQ, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift DIVIDE, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift TIMES, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift MINUS, reduce by rule 32)
error:  state 84: shift/reduce conflict (shift PLUS, reduce by rule 32)

state 84:

	exp : exp . op exp 
	cond : IF exp THEN exp . ELSE exp 
	cond : IF exp THEN exp .  (reduce by rule 32)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 101

	op	goto 26

	.	reduce by rule 32


state 85:

	exp : exp . op exp 
	seqexpcont : SEMICOLON exp . seqexpcont 

	SEMICOLON	shift 71
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26
	seqexpcont	goto 102

	.	reduce by rule 17


state 86:

	funcall : ID LPAREN argseq RPAREN .  (reduce by rule 37)



	.	reduce by rule 37


state 87:

	argseq : exp argseqcont .  (reduce by rule 39)



	.	reduce by rule 39


state 88:

	argseqcont : COMMA . exp argseqcont 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 103
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 89:

	exp : exp . op exp 
	record : typeid LBRACE ID EQ exp . recarg RBRACE 

	COMMA	shift 105
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26
	recarg	goto 104

	.	reduce by rule 44


state 90:

	array : typeid LBRACK exp RBRACK OF . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 106
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 91:

	lets : LET decs IN seqexp END .  (reduce by rule 36)



	.	reduce by rule 36


state 92:

	ty : typeid .  (reduce by rule 52)



	.	reduce by rule 52


state 93:

	tydec : TYPE typeid EQ ty .  (reduce by rule 51)



	.	reduce by rule 51


state 94:

	ty : ARRAY . OF typeid 

	OF	shift 107


	.	error


state 95:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 99

	tyfields	goto 108

	.	reduce by rule 55


state 96:

	exp : exp . op exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 59)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 59


state 97:

	vardec : VAR ID COLON typeid . ASSIGN exp 

	ASSIGN	shift 109


	.	error


state 98:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON typeid EQ exp 

	RPAREN	shift 110


	.	error


state 99:

	tyfields : ID . COLON typeid tyfieldscont 

	COLON	shift 111


	.	error


state 100:

	cond : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 112
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 101:

	cond : IF exp THEN exp ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 113
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 102:

	seqexpcont : SEMICOLON exp seqexpcont .  (reduce by rule 18)



	.	reduce by rule 18


state 103:

	exp : exp . op exp 
	argseqcont : COMMA exp . argseqcont 

	COMMA	shift 88
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26
	argseqcont	goto 114

	.	reduce by rule 40


state 104:

	record : typeid LBRACE ID EQ exp recarg . RBRACE 

	RBRACE	shift 115


	.	error


state 105:

	recarg : COMMA . ID EQ exp recarg 

	ID	shift 116


	.	error

error:  state 106: shift/reduce conflict (shift OR, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift AND, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift GE, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift GT, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift LE, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift LT, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift NEQ, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift EQ, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift DIVIDE, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift TIMES, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift MINUS, reduce by rule 35)
error:  state 106: shift/reduce conflict (shift PLUS, reduce by rule 35)

state 106:

	exp : exp . op exp 
	array : typeid LBRACK exp RBRACK OF exp .  (reduce by rule 35)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 35


state 107:

	ty : ARRAY OF . typeid 

	ID	shift 63

	typeid	goto 117

	.	error


state 108:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 118


	.	error


state 109:

	vardec : VAR ID COLON typeid ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 119
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 110:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON typeid EQ exp 

	COLON	shift 121
	EQ	shift 120


	.	error


state 111:

	tyfields : ID COLON . typeid tyfieldscont 

	ID	shift 63

	typeid	goto 122

	.	error


state 112:

	exp : exp . op exp 
	cond : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 123

	op	goto 26

	.	error

error:  state 113: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 113: shift/reduce conflict (shift PLUS, reduce by rule 31)

state 113:

	exp : exp . op exp 
	cond : IF exp THEN exp ELSE exp .  (reduce by rule 31)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 31


state 114:

	argseqcont : COMMA exp argseqcont .  (reduce by rule 41)



	.	reduce by rule 41


state 115:

	record : typeid LBRACE ID EQ exp recarg RBRACE .  (reduce by rule 43)



	.	reduce by rule 43


state 116:

	recarg : COMMA ID . EQ exp recarg 

	EQ	shift 124


	.	error


state 117:

	ty : ARRAY OF typeid .  (reduce by rule 54)



	.	reduce by rule 54


state 118:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 53)



	.	reduce by rule 53


state 119:

	exp : exp . op exp 
	vardec : VAR ID COLON typeid ASSIGN exp .  (reduce by rule 60)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 60


state 120:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 125
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . typeid EQ exp 

	ID	shift 63

	typeid	goto 126

	.	error


state 122:

	tyfields : ID COLON typeid . tyfieldscont 

	COMMA	shift 128

	tyfieldscont	goto 127

	.	reduce by rule 57


state 123:

	cond : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 129
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 124:

	recarg : COMMA ID EQ . exp recarg 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 130
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 125:

	exp : exp . op exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 61)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 61


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON typeid . EQ exp 

	EQ	shift 131


	.	error


state 127:

	tyfields : ID COLON typeid tyfieldscont .  (reduce by rule 56)



	.	reduce by rule 56


state 128:

	tyfieldscont : COMMA . ID COLON typeid tyfieldscont 

	ID	shift 132


	.	error

error:  state 129: shift/reduce conflict (shift OR, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift AND, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift GE, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift GT, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift LE, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift LT, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift NEQ, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift EQ, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift DIVIDE, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift TIMES, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift MINUS, reduce by rule 34)
error:  state 129: shift/reduce conflict (shift PLUS, reduce by rule 34)

state 129:

	exp : exp . op exp 
	cond : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 34)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 34


state 130:

	exp : exp . op exp 
	recarg : COMMA ID EQ exp . recarg 

	COMMA	shift 105
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26
	recarg	goto 133

	.	reduce by rule 44


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON typeid EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 134
	lvalue	goto 9
	typeid	goto 8
	cond	goto 7
	array	goto 6
	lets	goto 5
	literal	goto 4
	funcall	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 132:

	tyfieldscont : COMMA ID . COLON typeid tyfieldscont 

	COLON	shift 135


	.	error


state 133:

	recarg : COMMA ID EQ exp recarg .  (reduce by rule 45)



	.	reduce by rule 45


state 134:

	exp : exp . op exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON typeid EQ exp .  (reduce by rule 62)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	op	goto 26

	.	reduce by rule 62


state 135:

	tyfieldscont : COMMA ID COLON . typeid tyfieldscont 

	ID	shift 63

	typeid	goto 136

	.	error


state 136:

	tyfieldscont : COMMA ID COLON typeid . tyfieldscont 

	COMMA	shift 128

	tyfieldscont	goto 137

	.	reduce by rule 57


state 137:

	tyfieldscont : COMMA ID COLON typeid tyfieldscont .  (reduce by rule 58)



	.	reduce by rule 58


state 138:


	EOF	accept


	.	error

368 of 786 action table entries left after compaction
317 goto table entries
