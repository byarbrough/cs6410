Thomas Kowalski - BS student in CCIS
Brian Yarbrough - MS student in EECE

Many of the shift/reduce conflicts were hanled by precedence rules.
Precedence for the operators was explicitily outlined by Apel, such TIMES binding more tightly than PLUS. He also lists precedence for Boolean operations. Simply listing these in and giving them associativity eliminated many of the conflicts.
We had to think a little bit more carefully about the shift/reduce conflict with IF THEN and IF THEN ELSE.
This was also handled by precedence: right associative ELSE binds more tightly than ASSIGN, THEN, DO, or OF but less tightly than all the other operators.
This is the correct approach because in the case of

if a then if b then s1 else s2

The desired outcome is 

if a then { if b then s1 else s2 }.

Binding ELSE more tightly than THEN accomplishes this.


The most signifigant challenge we faced was with the the conflict between the two rules 

lvalue: ID LBRACK exp RBRACK

and

array: ID LBRACK exp RBRACK OF exp.

In order to fix it, we added a second rule to lvalue, identical to the first, but with different instructions to the abstract syntax tree. This allowes the parser to wait until more information is available before deciding what to do.
